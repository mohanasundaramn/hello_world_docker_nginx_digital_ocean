#
# user nginx;
# # can handle 1000 concurrent connections
# events {
#     worker_connections   1000;
# }
# # forwards http requests
# http {
#         # http server
#         server {
#               # listens the requests coming on port 80
#               listen 443;
#               ssl_certificate /etc/nginx/conf.d/cert.pem;
#               ssl_certificate_key /etc/nginx/conf.d/key.pem;
#
#               server_name   getgroci.tech www.getgroci.tech;
#               access_log  off;
#               # / means all the requests have to be forwarded to api service
#               location / {
#                 # resolves the IP of api using Docker internal DNS
#                 proxy_pass http://api:5000;
#               }
#         }
# }
#


user nginx;
# can handle 1000 concurrent connections
events {
    worker_connections   1000;
}
# forwards http requests
http {
        server {
            listen 80;
            server_name getgroci.tech www.getgroci.tech;
            server_tokens off;

            location /.well-known/acme-challenge/ {
                root /var/www/certbot;
            }

            location / {
                return 301 https://$host$request_uri;
            }
        }

        server {
            listen 443 ssl;
            server_name getgroci.tech www.getgroci.tech;
            server_tokens off;

            ssl_certificate /etc/letsencrypt/live/getgroci.tech/fullchain.pem;
            ssl_certificate_key /etc/letsencrypt/live/getgroci.tech/privkey.pem;
            include /etc/letsencrypt/options-ssl-nginx.conf;
            ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

            location / {
                proxy_pass http://api:5000;
                proxy_set_header    Host                $http_host;
                proxy_set_header    X-Real-IP           $remote_addr;
                proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
            }
        }
}